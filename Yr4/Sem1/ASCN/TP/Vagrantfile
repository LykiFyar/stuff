# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

#Notes
#user name for VMs is created as vagrant

#<vagrant box add bento/ubuntu-20.04> to add OS image to internal repository
#<vagrant up> to start VMs (run at the same folder where this file is, or pass file as argument)
#<vagrant halt> to stop VMs
#<vagrant destroy> to remove VMs

#You should only need change the first two/three variables in this file

#Variables
Number_VMs = 1 #number VMs to launch
IP_RANGE= "192.168.56"
PUBLIC_KEY_PATH = "~/.ssh/id_rsa.pub" #Change me!!
READ_PUBLIC_KEY = File.read(File.expand_path(PUBLIC_KEY_PATH)).strip

Vagrant.configure("2") do |config|

 config.vm.box = "bento/ubuntu-20.04"

 #config.vm.provider "virtualbox" do |vb|
 config.vm.provider "vmware_workstation" do |vb|
    vb.memory = "1024"
    vb.cpus = 2
  end

  (1..Number_VMs).each do |i|
    config.vm.define "VM_TP" do |node|
      node.vm.hostname = "VM#{i}"
      node.vm.network :private_network, ip: "#{IP_RANGE}.#{100+i}"
    end
  end

 config.vm.provision "shell", inline: <<-SHELL
        for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
        # Add Docker's official GPG key:
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl gnupg
        sudo install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        sudo chmod a+r /etc/apt/keyrings/docker.gpg

        # Add the repository to Apt sources:
        echo \
        "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

        echo "#{READ_PUBLIC_KEY}" >> /home/vagrant/.ssh/authorized_keys
        sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/g' /etc/ssh/sshd_config
        sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config
        systemctl restart sshd
        apt update
        apt-get install -y vim
        type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
&& sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
&& echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
&& sudo apt update \
&& sudo apt install gh -y
        sudo apt-get update
        sudo apt-get -y install apt-transport-https ca-certificates gnupg curl sudo
        echo "deb https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
        sudo apt-get update && sudo apt-get -y install google-cloud-cli
        sudo apt-get -y install kubectl
        sudo apt-get -y install google-cloud-sdk-gke-gcloud-auth-plugin
        sudo apt -y install ansible
        sudo apt -y install python3-pip
        pip install requests google-auth
        echo "Start with 'gcloud init'"
      SHELL

end